<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzq.demo.mapper.LikeLinkMapper" >
  <resultMap id="BaseResultMap" type="com.zzq.demo.model.LikeLink" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="link" property="link" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="programmer_Id" property="programmerId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, link, remark, programmer_Id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from likelink
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from likelink
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zzq.demo.model.LikeLink" >
    insert into likelink (id, link, remark, 
      programmer_Id)
    values (#{id,jdbcType=INTEGER}, #{link,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{programmerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.zzq.demo.model.LikeLink" >
    insert into likelink
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="link != null" >
        link,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="programmerId != null" >
        programmer_Id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="link != null" >
        #{link,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="programmerId != null" >
        #{programmerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zzq.demo.model.LikeLink" >
    update likelink
    <set >
      <if test="link != null" >
        link = #{link,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="programmerId != null" >
        programmer_Id = #{programmerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zzq.demo.model.LikeLink" >
    update likelink
    set link = #{link,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      programmer_Id = #{programmerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
	<select id="findLikeLinkListByProgrammerId" parameterType="java.lang.Integer" resultType="java.util.HashMap">
		SELECT  p.name,ll.link,ll.remark FROM programmer p,likeLink ll where ll.programmer_Id=p.id AND p.id=#{id}
	</select>
	<select id="findLikeLinkListByProgrammerIdAndName" resultType="java.util.HashMap">
		SELECT  * FROM programmer p,likeLink ll where ll.programmer_Id=p.id AND p.id=#{programmerId} AND p.name=#{name}
	</select>
  <select id="findLikeLinkListByProgrammerIdAndNamePage" resultType="java.util.HashMap">
    SELECT  * FROM programmer p,likeLink ll where ll.programmer_Id=p.id AND p.id=#{programmerId} AND p.name=#{name} ORDER BY p.id
  </select>
</mapper>